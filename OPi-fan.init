#!/bin/sh
### BEGIN INIT INFO
# Provides:          OPi-fan
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Daemon Control Fan
# Description:       The OPi-fan service daemon is able to monitor.
#                    one FAN connected to a Orange Pi
### END INIT INFO

# Source function library.
. /lib/lsb/init-functions

DAEMON="/usr/local/bin/OPi-fan"
PIDFILE="/var/run/OPi-fan.pid"
OPTIONS=" -d"

[ -x $DAEMON ] || exit 0


start() {
  for pid in $(cat $PIDFILE); do
     if ( kill -0 $pid > /dev/null 2>&1 ); then
      echo "OPi-fan is already running.";
      status;
      return 0;
    fi
  done;

  log_daemon_msg "Starting OPi-fan"
#  nice -n 19 $DAEMON $OPTIONS &
  $DAEMON $OPTIONS
  status=$?
  log_end_msg $status
}

stop() {
#  touch $PIDFILE
  log_daemon_msg "Stopping OPi-fan"
  for pid in $(cat $PIDFILE); do
    kill -15 $pid > /dev/null 2>&1
  done
  status=$?
  log_end_msg $status
}

restart() {
  stop
  sleep 2
  start
}

status(){
  echo -n "OPi-fan  status: "
  if [ ! -f $PIDFILE ]; then
    echo "Not running"
    exit 0
  fi
  for pid in $(cat $PIDFILE); do
    kill -0 $pid > /dev/null 2>&1 && echo -n "[ \033[1;32mok\033[0m ]" || echo -n "[\033[31mFAIL\033[0m]";
  done;
  echo
}

case "$1" in
  start)
    start
  ;;
  stop)
    stop
  ;;
  status)
    status
  ;;
  restart)
    restart
  ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
  ;;
esac

exit 0

